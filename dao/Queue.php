<?php
require 'DAO.php';

/**
 * Created by PhpStorm.
 * User: Navus
 * Date: 2019-01-28
 * Time: 15:31
 */
class Queue extends DAO
{
    private $table = "queue";
    private $journeyID = "JourneyID";
    private $customerID = "CustomerID";
    private $idFieldName = 'ID';

    public function __construct()
    {
        // establish connection
        parent::__construct($this->table);
//        $message = "Connection between PHP and MySQL is succesfull!." .
//            "You can start retrieving data";
//        echo "<script type='text/javascript'>alert('$message');</script>";

    }

    public function getConnection()
    {
        return parent::getConnection(); // TODO: Change the autogenerated stub
    }

    public function getByID($id)
    {
        return parent::query('SELECT * FROM ' . $this->table . ' WHERE ' . $this->idFieldName . ' = ' . $id)->fetch_object();

    }

    public function getAll()
    {
        return parent::getAll();
    }

    public function getJourney($journeyID)
    {
        $table = "journey";
        $result = parent::query('SELECT ' . $table . '.*' .
            ' FROM ' . $table . '
                                    INNER JOIN queue
                                    ON ' . $table . '.ID = queue.' . $this->journeyID .
            ' AND ' . $table . '.ID = ' . $journeyID)->fetch_object();
        return $result;
    }

    public function getCustomer($customerID)
    {
        $table = "customer";
        $result = parent::query('SELECT ' . $table . '.*' .
            ' FROM ' . $table . '
                                    INNER JOIN queue
                                    ON ' . $table . '.ID = queue.' . $this->customerID .
            ' AND ' . $table . '.ID = ' . $customerID)->fetch_object();
        return $result;
    }

    public function isCompleted($queueID)
    {
        return parent::query('SELECT completed
                                   FROM ' . $this->table .
            ' WHERE ID=' . $queueID)->fetch_row();
    }

    public function isDriverAssigned($queueID)
    {
        $result = parent::query('SELECT isDriverAssigned
                                   FROM ' . $this->table .
            ' WHERE ID=' . $queueID)->fetch_object();
        // if driver is assigned
        if ($result->isDriverAssigned == 1) {
            return "Yes";
        } else {
            return "No";
        }
    }

    public function hasPriority($journeyID)
    {
        $table = "journey";
        $result = parent::query('SELECT Priority
                                   FROM ' . $table .
            ' WHERE ID=' . $journeyID)->fetch_object();
        // if driver is assigned
        if ($result->Priority == 1) {
            return "Yes";
        } else {
            return "No";
        }
    }

    public function getAssignedDriver($queueID)
    {
        $table = "assigndriver";
        $result = parent::query('SELECT * ' .
            ' FROM ' . $table .
            ' WHERE queueID = ' . $queueID)->fetch_object();
        if ($result) {
            return $result;
        }
        return false;
    }

    public function getDriver($driverID)
    {
        $table = "driver";
        $result = parent::query('SELECT * ' .
            ' FROM ' . $table .
            ' WHERE ID = ' . $driverID)->fetch_object();
        return $result;
    }

    public function getVehicle($employee_id)
    {
        $table = 'vehicle';
        $result = parent::query('SELECT * ' .
            'FROM ' . $table .
            ' WHERE ' . $this->idFieldName . ' = ' . $employee_id)->fetch_object()
        or die(parent::getConnection()->getConnection()->error);
        return $result;
    }

    public function getEmployeeInfo($employee_id)
    {
        $table = 'employee';
        $result = parent::query('SELECT *
                                      FROM ' . $table . '
                                      WHERE ' . $this->idFieldName . ' = ' . $employee_id)->fetch_object()
        or die(parent::getConnection()->getConnection()->error);
        return $result;
    }

    public function getAllAvailableDrivers()
    {
        $table = "driver";
        $result = parent::query(' SELECT *
                                        FROM ' . $table . '
                                         WHERE Available=1');
        return $result;
    }

    public function getAllDrivers()
    {
        return parent::getAllByTable("driver");
    }

    public function isDriverAvailable($driverID)
    {
        $table = 'driver';
        $result = parent::query('SELECT Available
                                      FROM ' . $table . '
                                      WHERE ' . $this->idFieldName . ' = ' . $driverID)->fetch_object() or die(parent::getConnection()->getConnection()->error);
        if ($result->Available == 1) {
            return "Yes";
        } else return "No";
    }
}